name: Build and publish

on:
  pull_request:
  push:
    paths:
      - 'VERSION'
  workflow_dispatch:

jobs:
  build:
    name: Build wheels on ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x86_64
          - os: ubuntu-22.04
            arch: i686
          - os: ubuntu-22.04
            arch: aarch64
          - os: macos-12
            arch: x86_64 universal2
          - os: windows-2022
            arch: x86
            before: vcpkg install openssl:x86-windows-static
            env: LIB="C:\\vcpkg\\packages\\openssl_x86-windows-static\\lib" INCLUDE="C:\\vcpkg\\packages\\openssl_x86-windows-static\\include"
          - os: windows-2022
            arch: AMD64
            before: vcpkg install openssl:x64-windows-static
            env: LIB="C:\\vcpkg\\packages\\openssl_x64-windows-static\\lib" INCLUDE="C:\\vcpkg\\packages\\openssl_x64-windows-static\\include"

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set variables
        run: |
          VERSION=$(cat VERSION)
          echo "TAG=$VERSION" >> $GITHUB_ENV
        shell: bash

      - name: Checkout yara-python
        uses: actions/checkout@v3
        with:
          repository: VirusTotal/yara-python
          ref: ${{ env.TAG }}
          path: yara-python
          submodules: true

      - name: Change package name
        run: |
          sed -i -E "s/name='yara-python'/name='yara-python-wheel'/" yara-python/setup.py
          sed -i -E "s/https:\/\/github.com\/VirusTotal\/yara-python/https:\/\/github.com\/Schamper\/yara-python-wheel/" yara-python/setup.py
          cp README.rst yara-python/README.rst
        shell: bash

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        with:
          package-dir: yara-python
        env:
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_BEFORE_ALL_LINUX: |
            if [[ ! -z "$(which yum)" ]]; then
              yum install -y make gcc perl-core pcre-devel wget zlib-devel git automake
              wget https://ftp.openssl.org/source/openssl-1.1.1k.tar.gz
              tar xf openssl*.gz
              cd openssl*
              ./config --prefix=/usr --openssldir=/etc/ssl zlib-dynamic
              make -j$(nproc)
              make install
            elif [[ ! -z "$(which apk)" ]]; then
              apk add openssl-dev
            fi
          CIBW_BEFORE_ALL_WINDOWS: ${{ matrix.before }}
          CIBW_BUILD_FRONTEND: build
          CIBW_CONFIG_SETTINGS: --enable-cuckoo --enable-magic --enable-dex --enable-macho --enable-openssl
          CIBW_ENVIRONMENT: ${{ matrix.env }}
          CIBW_SKIP: cp36-*
          CIBW_TEST_COMMAND: python {package}/tests.py

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  publish:
    if: ${{ github.ref_name == 'main' || github.ref_type == 'tag' }}
    needs: [build]
    runs-on: ubuntu-latest
    environment: publish
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
